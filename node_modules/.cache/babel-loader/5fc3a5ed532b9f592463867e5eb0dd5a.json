{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\glush\\\\Desktop\\\\react-sapr-main\\\\src\\\\components\\\\Preprocessor\\\\Preprocessor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addNewRod, newRodAreaChanged, newRodLengthChanged, newRodModulusChanged, newRodSigmaChanged, newRodDistLoadChanged, changeRod, changingRodAreaChanged, changingRodLengthChanged, changingRodModulusChanged, changingRodSigmaChanged, changingRodDistLoadChanged, changingRodSubmit, removeRodRow, addNodeRow, newNodeNumberChanged, newNodeForceChanged, removeNodeRow, changeNode, changingNodeNumberChanged, changingNodeForceChanged, changingNodeSubmit, changeLeftSupport, changeRightSupport, checkForError, downloadConstruction, handleFileOpening, clearSolution, showCanvas } from \"../../reducers/reducer\";\nimport ConstructionCanvas from \"./ConstructionCanvas\";\nimport \"./Preprocessor.scss\";\n\nfunction Preprocessor(props) {\n  _s();\n\n  const openFileInputRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"preprocessor__body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preprocessor__rods\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        class: \"preprocessor__rods-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0421\\u0442\\u0435\\u0440\\u0436\\u0435\\u043D\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"A(\\u043F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"L(\\u0434\\u043B\\u0438\\u043D\\u0430)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"E(\\u043C\\u043E\\u0434.\\u0443\\u043F\\u0440)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u03C3(\\u0434\\u043E\\u043F.\\u043D\\u0430\\u043F\\u0440)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"q(\\u0440\\u0430\\u0441\\u043F\\u0440.\\u043D\\u0430\\u0433)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [props.rodsRows.map(rodRow => {\n            if (rodRow.index === props.changingRodIndex) {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: props.changingRodIndex\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: props.changingRodInputRow.area,\n                    onChange: e => props.changingRodAreaChanged(e.target.value),\n                    className: `table-input ${props.changingRodInputRow.isAreaCorrect ? \"\" : \"input-error\"}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: props.changingRodInputRow.length,\n                    onChange: e => props.changingRodLengthChanged(e.target.value),\n                    className: `table-input ${props.changingRodInputRow.isLengthCorrect ? \"\" : \"input-error\"}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: props.changingRodInputRow.modulus,\n                    onChange: e => props.changingRodModulusChanged(e.target.value),\n                    className: `table-input ${props.changingRodInputRow.isModulusCorrect ? \"\" : \"input-error\"}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: props.changingRodInputRow.sigma,\n                    onChange: e => props.changingRodSigmaChanged(e.target.value),\n                    className: `table-input ${props.changingRodInputRow.isSigmaCorrect ? \"\" : \"input-error\"}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: props.changingRodInputRow.distLoad,\n                    onChange: e => props.changingRodDistLoadChanged(e.target.value),\n                    className: `table-input ${props.changingRodInputRow.isDistLoadCorrect ? \"\" : \"input-error\"}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      props.changingRodSubmit();\n                      props.clearSolution();\n                    },\n                    children: \"\\u2713\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 37\n              }, this);\n            }\n\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: rodRow.index\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: rodRow.area\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: rodRow.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: rodRow.modulus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: rodRow.sigma\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: rodRow.distLoad\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"preprocessor__rods-row-buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => props.changeRod(rodRow.index),\n                  children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    props.removeRodRow(rodRow.index);\n                    props.changeLeftSupport(props.leftSupport.isChecked);\n                    props.changeRightSupport(props.rightSupport.isChecked);\n                    props.checkForError();\n                    props.clearSolution();\n                  },\n                  children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 37\n              }, this)]\n            }, rodRow.reactKey, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 33\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: props.rodsRows.length + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: `table-input ${props.newRodInputRow.isAreaCorrect ? \"\" : \"input-error\"}`,\n                type: \"text\",\n                value: props.newRodInputRow.area,\n                onChange: e => {\n                  props.newRodAreaChanged(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: `table-input ${props.newRodInputRow.isLengthCorrect ? \"\" : \"input-error\"}`,\n                type: \"text\",\n                value: props.newRodInputRow.length,\n                onChange: e => {\n                  props.newRodLengthChanged(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: `table-input ${props.newRodInputRow.isModulusCorrect ? \"\" : \"input-error\"}`,\n                type: \"text\",\n                value: props.newRodInputRow.modulus,\n                onChange: e => {\n                  props.newRodModulusChanged(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: `table-input ${props.newRodInputRow.isSigmaCorrect ? \"\" : \"input-error\"}`,\n                type: \"text\",\n                value: props.newRodInputRow.sigma,\n                onChange: e => {\n                  props.newRodSigmaChanged(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: `table-input ${props.newRodInputRow.isDistLoadCorrect ? \"\" : \"input-error\"}`,\n                type: \"text\",\n                value: props.newRodInputRow.distLoad,\n                onChange: e => {\n                  props.newRodDistLoadChanged(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"preprocessor__rods-add-rod-button-td\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"preprocessor__rods-add-rod-button\",\n                onClick: () => {\n                  props.addRod();\n                  props.changeLeftSupport(props.leftSupport.isChecked);\n                  props.changeRightSupport(props.rightSupport.isChecked);\n                  props.checkForError();\n                  props.clearSolution();\n                },\n                children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preprocessor__nodes\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"preprocessor__nodes-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0423\\u0437\\u0435\\u043B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0421\\u043E\\u0441\\u0440\\u0435\\u0434\\u043E\\u0442\\u043E\\u0447\\u0435\\u043D\\u043D\\u0430\\u044F \\u043D\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [props.nodesRows.map((nodeRow, index) => {\n            if (index === props.changingNodeIndex) {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: props.changingNodeInputRow.nodeNumber,\n                    onChange: e => props.changingNodeNumberChanged(e.target.value),\n                    className: `table-input ${props.changingNodeInputRow.isNodeNumberCorrect ? \"\" : \"input-error\"}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: props.changingNodeInputRow.nodeForce,\n                    onChange: e => props.changingNodeForceChanged(e.target.value),\n                    className: `table-input ${props.changingNodeInputRow.isNodeForceCorrect ? \"\" : \"input-error\"}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      props.changingNodeSubmit();\n                      props.checkForError();\n                      props.clearSolution();\n                    },\n                    children: \"\\u2713\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 37\n              }, this);\n            }\n\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: nodeRow.nodeNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: nodeRow.nodeForce\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"preprocessor__nodes-button-td\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    props.changeNode(index);\n                    props.checkForError();\n                    props.clearSolution();\n                  },\n                  children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    props.removeNodeRow(index);\n                    props.checkForError();\n                    props.clearSolution();\n                  },\n                  children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 33\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: props.newNodeInputRow.nodeNumber,\n                onChange: e => props.newNodeNumberChanged(e.target.value),\n                className: `table-input ${props.newNodeInputRow.isNodeNumberCorrect ? \"\" : \"input-error\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: props.newNodeInputRow.nodeForce,\n                onChange: e => props.newNodeForceChanged(e.target.value),\n                className: `table-input ${props.newNodeInputRow.isNodeForceCorrect ? \"\" : \"input-error\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"preprocessor__nodes-button-td\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  props.addNodeRow();\n                  props.checkForError();\n                },\n                children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0443\\u0437\\u0435\\u043B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preprocessor__rods-interface\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preprocessor__rods-supports\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\u041F\\u0440\\u0438\\u0441\\u0443\\u0442\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442 \\u043B\\u0435\\u0432\\u0430\\u044F \\u043E\\u043F\\u043E\\u0440\\u0430\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\" // className={styles.scale}\n            ,\n            checked: props.leftSupport.isChecked,\n            onChange: e => {\n              props.changeLeftSupport(e.target.checked);\n              props.clearSolution();\n              props.checkForError();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\u041F\\u0440\\u0438\\u0441\\u0443\\u0442\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442 \\u043F\\u0440\\u0430\\u0432\\u0430\\u044F \\u043E\\u043F\\u043E\\u0440\\u0430\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: props.rightSupport.isChecked,\n            onChange: e => {\n              props.changeRightSupport(e.target.checked);\n              props.clearSolution();\n              props.checkForError();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preprocessor__rods-buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            // disabled={!props.isReadyForSave}\n            onClick: () => {\n              if (props.errorMessage.length > 0 || !props.isReadyForSave) {\n                alert(props.errorMessage);\n              } else {\n                props.showCanvas();\n              }\n            },\n            children: \"\\u0417\\u0430\\u043F\\u0443\\u0441\\u0442\\u0438\\u0442\\u044C \\u043E\\u0442\\u0440\\u0438\\u0441\\u043E\\u0432\\u043A\\u0443\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 13\n    }, this), props.isCanvasShown ? /*#__PURE__*/_jsxDEV(ConstructionCanvas, {\n      data: props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 36\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Preprocessor, \"Hgv6guwPe8biz9trcYEwWTrEfTE=\");\n\n_c = Preprocessor;\n\nconst mapStateToProps = state => {\n  return {\n    rodsRows: state.rodsAndNodes.rodsRows,\n    newRodInputRow: state.rodsAndNodes.newRodInputRow,\n    changingRodIndex: state.rodsAndNodes.changingRodIndex,\n    changingRodInputRow: state.rodsAndNodes.changingRodInputRow,\n    nodesRows: state.rodsAndNodes.nodesRows,\n    newNodeInputRow: state.rodsAndNodes.newNodeInputRow,\n    changingNodeIndex: state.rodsAndNodes.changingNodeIndex,\n    changingNodeInputRow: state.rodsAndNodes.changingNodeInputRow,\n    leftSupport: state.rodsAndNodes.leftSupport,\n    rightSupport: state.rodsAndNodes.rightSupport,\n    isError: state.rodsAndNodes.isError,\n    errorMessage: state.rodsAndNodes.errorMessage,\n    isReadyForSave: state.rodsAndNodes.isReadyForSave,\n    isCanvasShown: state.rodsAndNodes.isCanvasShown\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addRod: () => dispatch(addNewRod()),\n    newRodAreaChanged: value => {\n      dispatch(newRodAreaChanged(value));\n    },\n    newRodLengthChanged: value => dispatch(newRodLengthChanged(value)),\n    newRodModulusChanged: value => dispatch(newRodModulusChanged(value)),\n    newRodSigmaChanged: value => dispatch(newRodSigmaChanged(value)),\n    newRodDistLoadChanged: value => dispatch(newRodDistLoadChanged(value)),\n    changeRod: index => dispatch(changeRod(index)),\n    changingRodAreaChanged: value => dispatch(changingRodAreaChanged(value)),\n    changingRodLengthChanged: value => dispatch(changingRodLengthChanged(value)),\n    changingRodModulusChanged: value => dispatch(changingRodModulusChanged(value)),\n    changingRodSigmaChanged: value => dispatch(changingRodSigmaChanged(value)),\n    changingRodDistLoadChanged: value => dispatch(changingRodDistLoadChanged(value)),\n    changingRodSubmit: () => dispatch(changingRodSubmit()),\n    removeRodRow: index => dispatch(removeRodRow(index)),\n    addNodeRow: () => dispatch(addNodeRow()),\n    removeNodeRow: index => dispatch(removeNodeRow(index)),\n    changeNode: index => dispatch(changeNode(index)),\n    newNodeNumberChanged: value => dispatch(newNodeNumberChanged(value)),\n    newNodeForceChanged: value => dispatch(newNodeForceChanged(value)),\n    changingNodeNumberChanged: value => dispatch(changingNodeNumberChanged(value)),\n    changingNodeForceChanged: value => dispatch(changingNodeForceChanged(value)),\n    changingNodeSubmit: () => dispatch(changingNodeSubmit()),\n    changeLeftSupport: isChecked => dispatch(changeLeftSupport(isChecked)),\n    changeRightSupport: isChecked => dispatch(changeRightSupport(isChecked)),\n    checkForError: () => dispatch(checkForError()),\n    downloadConstruction: () => dispatch(downloadConstruction()),\n    handleFileOpening: inputRef => dispatch(handleFileOpening(inputRef)),\n    clearSolution: () => dispatch(clearSolution()),\n    showCanvas: () => dispatch(showCanvas())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Preprocessor);\n\nvar _c;\n\n$RefreshReg$(_c, \"Preprocessor\");","map":{"version":3,"sources":["C:/Users/glush/Desktop/react-sapr-main/src/components/Preprocessor/Preprocessor.js"],"names":["React","useRef","connect","addNewRod","newRodAreaChanged","newRodLengthChanged","newRodModulusChanged","newRodSigmaChanged","newRodDistLoadChanged","changeRod","changingRodAreaChanged","changingRodLengthChanged","changingRodModulusChanged","changingRodSigmaChanged","changingRodDistLoadChanged","changingRodSubmit","removeRodRow","addNodeRow","newNodeNumberChanged","newNodeForceChanged","removeNodeRow","changeNode","changingNodeNumberChanged","changingNodeForceChanged","changingNodeSubmit","changeLeftSupport","changeRightSupport","checkForError","downloadConstruction","handleFileOpening","clearSolution","showCanvas","ConstructionCanvas","Preprocessor","props","openFileInputRef","rodsRows","map","rodRow","index","changingRodIndex","changingRodInputRow","area","e","target","value","isAreaCorrect","length","isLengthCorrect","modulus","isModulusCorrect","sigma","isSigmaCorrect","distLoad","isDistLoadCorrect","leftSupport","isChecked","rightSupport","reactKey","newRodInputRow","addRod","nodesRows","nodeRow","changingNodeIndex","changingNodeInputRow","nodeNumber","isNodeNumberCorrect","nodeForce","isNodeForceCorrect","newNodeInputRow","checked","errorMessage","isReadyForSave","alert","isCanvasShown","mapStateToProps","state","rodsAndNodes","isError","mapDispatchToProps","dispatch","inputRef"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    addNewRod,\n    newRodAreaChanged,\n    newRodLengthChanged,\n    newRodModulusChanged,\n    newRodSigmaChanged,\n    newRodDistLoadChanged,\n    changeRod,\n    changingRodAreaChanged,\n    changingRodLengthChanged,\n    changingRodModulusChanged,\n    changingRodSigmaChanged,\n    changingRodDistLoadChanged,\n    changingRodSubmit,\n    removeRodRow,\n    addNodeRow,\n    newNodeNumberChanged,\n    newNodeForceChanged,\n    removeNodeRow,\n    changeNode,\n    changingNodeNumberChanged,\n    changingNodeForceChanged,\n    changingNodeSubmit,\n    changeLeftSupport,\n    changeRightSupport,\n    checkForError,\n    downloadConstruction,\n    handleFileOpening,\n    clearSolution,\n    showCanvas,\n} from \"../../reducers/reducer\";\nimport ConstructionCanvas from \"./ConstructionCanvas\";\nimport \"./Preprocessor.scss\";\n\nfunction Preprocessor(props) {\n    const openFileInputRef = useRef(null);\n    return (\n        <div className=\"preprocessor__body\">\n            <div className=\"preprocessor__rods\">\n\n                <table class=\"preprocessor__rods-table\">\n                    <thead>\n                        <tr>\n                            <th>Стержень</th>\n                            <th>A(площадь)</th>\n                            <th>L(длина)</th>\n                            <th>E(мод.упр)</th>\n                            <th>σ(доп.напр)</th>\n                            <th>q(распр.наг)</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {props.rodsRows.map((rodRow) => {\n                            if (rodRow.index === props.changingRodIndex) {\n                                return (\n                                    <tr>\n                                        <td>{props.changingRodIndex}</td>\n                                        <td>\n                                            <input\n                                                type=\"text\"\n                                                value={\n                                                    props.changingRodInputRow\n                                                        .area\n                                                }\n                                                onChange={(e) =>\n                                                    props.changingRodAreaChanged(\n                                                        e.target.value\n                                                    )\n                                                }\n                                                className={`table-input ${\n                                                    props.changingRodInputRow\n                                                        .isAreaCorrect\n                                                        ? \"\"\n                                                        : \"input-error\"\n                                                }`}\n                                            />\n                                        </td>\n                                        <td>\n                                            <input\n                                                type=\"text\"\n                                                value={\n                                                    props.changingRodInputRow\n                                                        .length\n                                                }\n                                                onChange={(e) =>\n                                                    props.changingRodLengthChanged(\n                                                        e.target.value\n                                                    )\n                                                }\n                                                className={`table-input ${\n                                                    props.changingRodInputRow\n                                                        .isLengthCorrect\n                                                        ? \"\"\n                                                        : \"input-error\"\n                                                }`}\n                                            />\n                                        </td>\n                                        <td>\n                                            <input\n                                                type=\"text\"\n                                                value={\n                                                    props.changingRodInputRow\n                                                        .modulus\n                                                }\n                                                onChange={(e) =>\n                                                    props.changingRodModulusChanged(\n                                                        e.target.value\n                                                    )\n                                                }\n                                                className={`table-input ${\n                                                    props.changingRodInputRow\n                                                        .isModulusCorrect\n                                                        ? \"\"\n                                                        : \"input-error\"\n                                                }`}\n                                            />\n                                        </td>\n                                        <td>\n                                            <input\n                                                type=\"text\"\n                                                value={\n                                                    props.changingRodInputRow\n                                                        .sigma\n                                                }\n                                                onChange={(e) =>\n                                                    props.changingRodSigmaChanged(\n                                                        e.target.value\n                                                    )\n                                                }\n                                                className={`table-input ${\n                                                    props.changingRodInputRow\n                                                        .isSigmaCorrect\n                                                        ? \"\"\n                                                        : \"input-error\"\n                                                }`}\n                                            />\n                                        </td>\n                                        <td>\n                                            <input\n                                                type=\"text\"\n                                                value={\n                                                    props.changingRodInputRow\n                                                        .distLoad\n                                                }\n                                                onChange={(e) =>\n                                                    props.changingRodDistLoadChanged(\n                                                        e.target.value\n                                                    )\n                                                }\n                                                className={`table-input ${\n                                                    props.changingRodInputRow\n                                                        .isDistLoadCorrect\n                                                        ? \"\"\n                                                        : \"input-error\"\n                                                }`}\n                                            />\n                                        </td>\n                                        <td\n                                        // className={styles.rodRowButtons}\n                                        >\n                                            <button\n                                                onClick={() => {\n                                                    props.changingRodSubmit();\n                                                    props.clearSolution();\n                                                }}>\n                                                ✓\n                                            </button>\n                                        </td>\n                                    </tr>\n                                );\n                            }\n                            return (\n                                <tr key={rodRow.reactKey}>\n                                    <td>{rodRow.index}</td>\n                                    <td>{rodRow.area}</td>\n                                    <td>{rodRow.length}</td>\n                                    <td>{rodRow.modulus}</td>\n                                    <td>{rodRow.sigma}</td>\n                                    <td>{rodRow.distLoad}</td>\n                                    <td className=\"preprocessor__rods-row-buttons\">\n                                        <button\n                                            onClick={() =>\n                                                props.changeRod(rodRow.index)\n                                            }>\n                                            Изменить\n                                        </button>\n                                        <button\n                                            onClick={() => {\n                                                props.removeRodRow(\n                                                    rodRow.index\n                                                );\n                                                props.changeLeftSupport(\n                                                    props.leftSupport.isChecked\n                                                );\n                                                props.changeRightSupport(\n                                                    props.rightSupport.isChecked\n                                                );\n                                                props.checkForError();\n                                                props.clearSolution();\n                                            }}>\n                                            Удалить\n                                        </button>\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                        <tr>\n                            <td>{props.rodsRows.length + 1}</td>\n                            <td>\n                                <input\n                                    className={`table-input ${\n                                        props.newRodInputRow.isAreaCorrect\n                                            ? \"\"\n                                            : \"input-error\"\n                                    }`}\n                                    type=\"text\"\n                                    value={props.newRodInputRow.area}\n                                    onChange={(e) => {\n                                        props.newRodAreaChanged(e.target.value);\n                                    }}\n                                />\n                            </td>\n                            <td>\n                                <input\n                                    className={`table-input ${\n                                        props.newRodInputRow.isLengthCorrect\n                                            ? \"\"\n                                            : \"input-error\"\n                                    }`}\n                                    type=\"text\"\n                                    value={props.newRodInputRow.length}\n                                    onChange={(e) => {\n                                        props.newRodLengthChanged(\n                                            e.target.value\n                                        );\n                                    }}\n                                />\n                            </td>\n                            <td>\n                                <input\n                                    className={`table-input ${\n                                        props.newRodInputRow.isModulusCorrect\n                                            ? \"\"\n                                            : \"input-error\"\n                                    }`}\n                                    type=\"text\"\n                                    value={props.newRodInputRow.modulus}\n                                    onChange={(e) => {\n                                        props.newRodModulusChanged(\n                                            e.target.value\n                                        );\n                                    }}\n                                />\n                            </td>\n                            <td>\n                                <input\n                                    className={`table-input ${\n                                        props.newRodInputRow.isSigmaCorrect\n                                            ? \"\"\n                                            : \"input-error\"\n                                    }`}\n                                    type=\"text\"\n                                    value={props.newRodInputRow.sigma}\n                                    onChange={(e) => {\n                                        props.newRodSigmaChanged(\n                                            e.target.value\n                                        );\n                                    }}\n                                />\n                            </td>\n                            <td>\n                                <input\n                                    className={`table-input ${\n                                        props.newRodInputRow.isDistLoadCorrect\n                                            ? \"\"\n                                            : \"input-error\"\n                                    }`}\n                                    type=\"text\"\n                                    value={props.newRodInputRow.distLoad}\n                                    onChange={(e) => {\n                                        props.newRodDistLoadChanged(\n                                            e.target.value\n                                        );\n                                    }}\n                                />\n                            </td>\n                            <td className=\"preprocessor__rods-add-rod-button-td\">\n                                <button\n                                    className=\"preprocessor__rods-add-rod-button\"\n                                    onClick={() => {\n                                        props.addRod();\n                                        props.changeLeftSupport(\n                                            props.leftSupport.isChecked\n                                        );\n                                        props.changeRightSupport(\n                                            props.rightSupport.isChecked\n                                        );\n                                        props.checkForError();\n                                        props.clearSolution();\n                                    }}>\n                                    Добавить\n                                </button>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div className=\"preprocessor__nodes\">\n                <table className=\"preprocessor__nodes-table\">\n                    <thead>\n                        <tr>\n                            <th>Узел</th>\n                            <th>Сосредоточенная нагрузка</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {props.nodesRows.map((nodeRow, index) => {\n                            if (index === props.changingNodeIndex) {\n                                return (\n                                    <tr>\n                                        <td>\n                                            <input\n                                                type=\"text\"\n                                                value={\n                                                    props.changingNodeInputRow\n                                                        .nodeNumber\n                                                }\n                                                onChange={(e) =>\n                                                    props.changingNodeNumberChanged(\n                                                        e.target.value\n                                                    )\n                                                }\n                                                className={`table-input ${\n                                                    props.changingNodeInputRow\n                                                        .isNodeNumberCorrect\n                                                        ? \"\"\n                                                        : \"input-error\"\n                                                }`}\n                                            />\n                                        </td>\n                                        <td>\n                                            <input\n                                                type=\"text\"\n                                                value={\n                                                    props.changingNodeInputRow\n                                                        .nodeForce\n                                                }\n                                                onChange={(e) =>\n                                                    props.changingNodeForceChanged(\n                                                        e.target.value\n                                                    )\n                                                }\n                                                className={`table-input ${\n                                                    props.changingNodeInputRow\n                                                        .isNodeForceCorrect\n                                                        ? \"\"\n                                                        : \"input-error\"\n                                                }`}\n                                            />\n                                        </td>\n                                        <td\n                                        // className={styles.rodRowButtons}\n                                        >\n                                            <button\n                                                onClick={() => {\n                                                    props.changingNodeSubmit();\n                                                    props.checkForError();\n                                                    props.clearSolution();\n                                                }}>\n                                                ✓\n                                            </button>\n                                        </td>\n                                    </tr>\n                                );\n                            }\n                            return (\n                                <tr>\n                                    <td>{nodeRow.nodeNumber}</td>\n                                    <td>{nodeRow.nodeForce}</td>\n                                    <td className=\"preprocessor__nodes-button-td\">\n                                        <button\n                                            onClick={() => {\n                                                props.changeNode(index);\n                                                props.checkForError();\n                                                props.clearSolution();\n                                            }}>\n                                            Изменить\n                                        </button>\n                                        <button\n                                            onClick={() => {\n                                                props.removeNodeRow(index);\n                                                props.checkForError();\n                                                props.clearSolution();\n                                            }}>\n                                            Удалить\n                                        </button>\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                        <tr>\n                            <td>\n                                <input\n                                    type=\"text\"\n                                    value={props.newNodeInputRow.nodeNumber}\n                                    onChange={(e) =>\n                                        props.newNodeNumberChanged(\n                                            e.target.value\n                                        )\n                                    }\n                                    className={`table-input ${\n                                        props.newNodeInputRow\n                                            .isNodeNumberCorrect\n                                            ? \"\"\n                                            : \"input-error\"\n                                    }`}\n                                />\n                            </td>\n                            <td>\n                                <input\n                                    type=\"text\"\n                                    value={props.newNodeInputRow.nodeForce}\n                                    onChange={(e) =>\n                                        props.newNodeForceChanged(\n                                            e.target.value\n                                        )\n                                    }\n                                    className={`table-input ${\n                                        props.newNodeInputRow.isNodeForceCorrect\n                                            ? \"\"\n                                            : \"input-error\"\n                                    }`}\n                                />\n                            </td>\n                            <td className=\"preprocessor__nodes-button-td\">\n                                <button\n                                    onClick={() => {\n                                        props.addNodeRow();\n                                        props.checkForError();\n                                    }}>\n                                    Добавить узел\n                                </button>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div className=\"preprocessor__rods-interface\">\n                <div className=\"preprocessor__rods-supports\">\n                    <div>\n                        Присутствует левая опора\n                        <input\n                            type=\"checkbox\"\n                            // className={styles.scale}\n                            checked={props.leftSupport.isChecked}\n                            onChange={(e) => {\n                                props.changeLeftSupport(e.target.checked);\n                                props.clearSolution();\n                                props.checkForError();\n                            }}\n                        />\n                    </div>\n                    <div>\n                        Присутствует правая опора\n                        <input\n                            type=\"checkbox\"\n                            checked={props.rightSupport.isChecked}\n                            onChange={(e) => {\n                                props.changeRightSupport(e.target.checked);\n                                props.clearSolution();\n                                props.checkForError();\n                            }}\n                        />\n                    </div>\n                </div>\n                <div className=\"preprocessor__rods-buttons\">\n                    <div>\n                        <button\n                            // disabled={!props.isReadyForSave}\n                            onClick={() => {\n                                if (\n                                    props.errorMessage.length > 0 ||\n                                    !props.isReadyForSave\n                                ) {\n                                    alert(props.errorMessage);\n                                } else {\n                                    props.showCanvas();\n                                }\n                            }}>\n                            Запустить отрисовку\n                        </button>\n                    </div>\n                </div>\n            </div>\n            {props.isCanvasShown ? <ConstructionCanvas data={props} /> : null}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        rodsRows: state.rodsAndNodes.rodsRows,\n        newRodInputRow: state.rodsAndNodes.newRodInputRow,\n        changingRodIndex: state.rodsAndNodes.changingRodIndex,\n        changingRodInputRow: state.rodsAndNodes.changingRodInputRow,\n\n        nodesRows: state.rodsAndNodes.nodesRows,\n        newNodeInputRow: state.rodsAndNodes.newNodeInputRow,\n        changingNodeIndex: state.rodsAndNodes.changingNodeIndex,\n        changingNodeInputRow: state.rodsAndNodes.changingNodeInputRow,\n\n        leftSupport: state.rodsAndNodes.leftSupport,\n        rightSupport: state.rodsAndNodes.rightSupport,\n\n        isError: state.rodsAndNodes.isError,\n        errorMessage: state.rodsAndNodes.errorMessage,\n        isReadyForSave: state.rodsAndNodes.isReadyForSave,\n        isCanvasShown: state.rodsAndNodes.isCanvasShown,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addRod: () => dispatch(addNewRod()),\n        newRodAreaChanged: (value) => {\n            dispatch(newRodAreaChanged(value));\n        },\n        newRodLengthChanged: (value) => dispatch(newRodLengthChanged(value)),\n        newRodModulusChanged: (value) => dispatch(newRodModulusChanged(value)),\n        newRodSigmaChanged: (value) => dispatch(newRodSigmaChanged(value)),\n        newRodDistLoadChanged: (value) =>\n            dispatch(newRodDistLoadChanged(value)),\n        changeRod: (index) => dispatch(changeRod(index)),\n        changingRodAreaChanged: (value) =>\n            dispatch(changingRodAreaChanged(value)),\n        changingRodLengthChanged: (value) =>\n            dispatch(changingRodLengthChanged(value)),\n        changingRodModulusChanged: (value) =>\n            dispatch(changingRodModulusChanged(value)),\n        changingRodSigmaChanged: (value) =>\n            dispatch(changingRodSigmaChanged(value)),\n        changingRodDistLoadChanged: (value) =>\n            dispatch(changingRodDistLoadChanged(value)),\n        changingRodSubmit: () => dispatch(changingRodSubmit()),\n        removeRodRow: (index) => dispatch(removeRodRow(index)),\n\n        addNodeRow: () => dispatch(addNodeRow()),\n        removeNodeRow: (index) => dispatch(removeNodeRow(index)),\n        changeNode: (index) => dispatch(changeNode(index)),\n        newNodeNumberChanged: (value) => dispatch(newNodeNumberChanged(value)),\n        newNodeForceChanged: (value) => dispatch(newNodeForceChanged(value)),\n        changingNodeNumberChanged: (value) =>\n            dispatch(changingNodeNumberChanged(value)),\n        changingNodeForceChanged: (value) =>\n            dispatch(changingNodeForceChanged(value)),\n        changingNodeSubmit: () => dispatch(changingNodeSubmit()),\n        changeLeftSupport: (isChecked) =>\n            dispatch(changeLeftSupport(isChecked)),\n        changeRightSupport: (isChecked) =>\n            dispatch(changeRightSupport(isChecked)),\n        checkForError: () => dispatch(checkForError()),\n        downloadConstruction: () => dispatch(downloadConstruction()),\n        handleFileOpening: (inputRef) => dispatch(handleFileOpening(inputRef)),\n        clearSolution: () => dispatch(clearSolution()),\n        showCanvas: () => dispatch(showCanvas()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Preprocessor);\n"]},"metadata":{},"sourceType":"module"}