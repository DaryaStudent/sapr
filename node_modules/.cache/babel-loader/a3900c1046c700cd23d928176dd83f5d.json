{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\glush\\\\Desktop\\\\react-sapr-main\\\\src\\\\components\\\\Preprocessor\\\\Preprocessor.js\";\nimport { connect } from \"react-redux\";\nimport { addNewStern, newSternAreaChanged, newSternLengthChanged, newSternModulusChanged, newSternSigmaChanged, newSternDistLoadChanged, changeStern, changingSternAreaChanged, changingSternLengthChanged, changingSternModulusChanged, changingSternSigmaChanged, changingSternDistLoadChanged, changingSternSubmit, removeSternRow, addVortexRow, newVortexNumberChanged, newVortexForceChanged, removeVortexRow, changeVortex, changingVortexNumberChanged, changingVortexForceChanged, changingVortexSubmit, changeLeftSupport, changeRightSupport, checkForError, downloadConstruction, handleFileOpening, clearSolution, showCanvas } from \"../../reducers/reducer\";\nimport ConstructionCanvas from \"./ConstructionCanvas\";\nimport \"./Preprocessor.scss\";\n\nfunction Preprocessor(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"preprocessor__body\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preprocessor__STERNs\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        class: \"preprocessor__STERNs-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0421\\u0442\\u0435\\u0440\\u0436\\u0435\\u043D\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"L\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u03C3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"q\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [props.rodsRows.map(rodRow => {\n            if (rodRow.index === props.changingSternIndex) {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: props.changingSternIndex\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: props.changingSternInputRow.area,\n                    onChange: e => props.changingSternAreaChanged(e.target.value),\n                    className: `table-input ${props.changingSternInputRow.isAreaCorrect ? \"\" : \"input-error\"}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: props.changingSternInputRow.length,\n                    onChange: e => props.changingSternLengthChanged(e.target.value),\n                    className: `table-input ${props.changingSternInputRow.isLengthCorrect ? \"\" : \"input-error\"}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: props.changingSternInputRow.modulus,\n                    onChange: e => props.changingSternModulusChanged(e.target.value),\n                    className: `table-input ${props.changingSternInputRow.isModulusCorrect ? \"\" : \"input-error\"}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: props.changingSternInputRow.sigma,\n                    onChange: e => props.changingSternSigmaChanged(e.target.value),\n                    className: `table-input ${props.changingSternInputRow.isSigmaCorrect ? \"\" : \"input-error\"}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: props.changingSternInputRow.distLoad,\n                    onChange: e => props.changingSternDistLoadChanged(e.target.value),\n                    className: `table-input ${props.changingSternInputRow.isDistLoadCorrect ? \"\" : \"input-error\"}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      props.changingSternSubmit();\n                      props.clearSolution();\n                    },\n                    children: \"\\u2713\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 37\n              }, this);\n            }\n\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: rodRow.index\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: rodRow.area\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: rodRow.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: rodRow.modulus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: rodRow.sigma\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: rodRow.distLoad\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"preprocessor__STERNs-row-buttons\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 37\n              }, this)]\n            }, rodRow.reactKey, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 33\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: props.rodsRows.length + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: `table-input ${props.newSternInputRow.isAreaCorrect ? \"\" : \"input-error\"}`,\n                type: \"text\",\n                value: props.newSternInputRow.area,\n                onChange: e => {\n                  props.newSternAreaChanged(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: `table-input ${props.newSternInputRow.isLengthCorrect ? \"\" : \"input-error\"}`,\n                type: \"text\",\n                value: props.newSternInputRow.length,\n                onChange: e => {\n                  props.newSternLengthChanged(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: `table-input ${props.newSternInputRow.isModulusCorrect ? \"\" : \"input-error\"}`,\n                type: \"text\",\n                value: props.newSternInputRow.modulus,\n                onChange: e => {\n                  props.newSternModulusChanged(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: `table-input ${props.newSternInputRow.isSigmaCorrect ? \"\" : \"input-error\"}`,\n                type: \"text\",\n                value: props.newSternInputRow.sigma,\n                onChange: e => {\n                  props.newSternSigmaChanged(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: `table-input ${props.newSternInputRow.isDistLoadCorrect ? \"\" : \"input-error\"}`,\n                type: \"text\",\n                value: props.newSternInputRow.distLoad,\n                onChange: e => {\n                  props.newSternDistLoadChanged(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"preprocessor__STERNs-add-stem-button-td\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"preprocessor__STERNs-add-stem-button\",\n                onClick: () => {\n                  props.addStern();\n                  props.changeLeftSupport(props.leftSupport.isChecked);\n                  props.changeRightSupport(props.rightSupport.isChecked);\n                  props.checkForError();\n                  props.clearSolution();\n                },\n                children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preprocessor__nodes\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"preprocessor__nodes-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0443\\u0437\\u043B\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"H\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [props.nodesRows.map((nodeRow, index) => {\n            if (index === props.changingVortexIndex) {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: props.changingVortexInputRow.nodeNumber,\n                    onChange: e => props.changingVortexNumberChanged(e.target.value),\n                    className: `table-input ${props.changingVortexInputRow.isVortexNumberCorrect ? \"\" : \"input-error\"}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: props.changingVortexInputRow.nodeForce,\n                    onChange: e => props.changingVortexForceChanged(e.target.value),\n                    className: `table-input ${props.changingVortexInputRow.isVortexForceCorrect ? \"\" : \"input-error\"}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      props.changingVortexSubmit();\n                      props.checkForError();\n                      props.clearSolution();\n                    },\n                    children: \"\\u2713\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 37\n              }, this);\n            }\n\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: nodeRow.nodeNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: nodeRow.nodeForce\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"preprocessor__nodes-button-td\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 33\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: props.newVortexInputRow.nodeNumber,\n                onChange: e => props.newVortexNumberChanged(e.target.value),\n                className: `table-input ${props.newVortexInputRow.isVortexNumberCorrect ? \"\" : \"input-error\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: props.newVortexInputRow.nodeForce,\n                onChange: e => props.newVortexForceChanged(e.target.value),\n                className: `table-input ${props.newVortexInputRow.isVortexForceCorrect ? \"\" : \"input-error\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"preprocessor__nodes-button-td\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  props.addVortexRow();\n                  props.checkForError();\n                },\n                children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0443\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preprocessor__STERNs-interface\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preprocessor__STERNs-supports\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\u041B\\u0435\\u0432\\u0430\\u044F \\u0437\\u0430\\u0434\\u0435\\u043B\\u043A\\u0430\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\" // className={styles.scale}\n            ,\n            checked: props.leftSupport.isChecked,\n            onChange: e => {\n              props.changeLeftSupport(e.target.checked);\n              props.clearSolution();\n              props.checkForError();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\u041F\\u0440\\u0430\\u0432\\u0430\\u044F \\u0437\\u0430\\u0434\\u0435\\u043B\\u043A\\u0430\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: props.rightSupport.isChecked,\n            onChange: e => {\n              props.changeRightSupport(e.target.checked);\n              props.clearSolution();\n              props.checkForError();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 13\n    }, this), props.isCanvasShown ? /*#__PURE__*/_jsxDEV(ConstructionCanvas, {\n      data: props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 36\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Preprocessor;\n\nconst mapStateToProps = state => {\n  return {\n    rodsRows: state.rodsAndVortexs.rodsRows,\n    newSternInputRow: state.rodsAndVortexs.newSternInputRow,\n    changingSternIndex: state.rodsAndVortexs.changingSternIndex,\n    changingSternInputRow: state.rodsAndVortexs.changingSternInputRow,\n    nodesRows: state.rodsAndVortexs.nodesRows,\n    newVortexInputRow: state.rodsAndVortexs.newVortexInputRow,\n    changingVortexIndex: state.rodsAndVortexs.changingVortexIndex,\n    changingVortexInputRow: state.rodsAndVortexs.changingVortexInputRow,\n    leftSupport: state.rodsAndVortexs.leftSupport,\n    rightSupport: state.rodsAndVortexs.rightSupport,\n    isError: state.rodsAndVortexs.isError,\n    errorMessage: state.rodsAndVortexs.errorMessage,\n    isReadyForSave: state.rodsAndVortexs.isReadyForSave,\n    isCanvasShown: state.rodsAndVortexs.isCanvasShown\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addStern: () => dispatch(addNewStern()),\n    newSternAreaChanged: value => {\n      dispatch(newSternAreaChanged(value));\n    },\n    newSternLengthChanged: value => dispatch(newSternLengthChanged(value)),\n    newSternModulusChanged: value => dispatch(newSternModulusChanged(value)),\n    newSternSigmaChanged: value => dispatch(newSternSigmaChanged(value)),\n    newSternDistLoadChanged: value => dispatch(newSternDistLoadChanged(value)),\n    changeStern: index => dispatch(changeStern(index)),\n    changingSternAreaChanged: value => dispatch(changingSternAreaChanged(value)),\n    changingSternLengthChanged: value => dispatch(changingSternLengthChanged(value)),\n    changingSternModulusChanged: value => dispatch(changingSternModulusChanged(value)),\n    changingSternSigmaChanged: value => dispatch(changingSternSigmaChanged(value)),\n    changingSternDistLoadChanged: value => dispatch(changingSternDistLoadChanged(value)),\n    changingSternSubmit: () => dispatch(changingSternSubmit()),\n    removeSternRow: index => dispatch(removeSternRow(index)),\n    addVortexRow: () => dispatch(addVortexRow()),\n    removeVortexRow: index => dispatch(removeVortexRow(index)),\n    changeVortex: index => dispatch(changeVortex(index)),\n    newVortexNumberChanged: value => dispatch(newVortexNumberChanged(value)),\n    newVortexForceChanged: value => dispatch(newVortexForceChanged(value)),\n    changingVortexNumberChanged: value => dispatch(changingVortexNumberChanged(value)),\n    changingVortexForceChanged: value => dispatch(changingVortexForceChanged(value)),\n    changingVortexSubmit: () => dispatch(changingVortexSubmit()),\n    changeLeftSupport: isChecked => dispatch(changeLeftSupport(isChecked)),\n    changeRightSupport: isChecked => dispatch(changeRightSupport(isChecked)),\n    checkForError: () => dispatch(checkForError()),\n    downloadConstruction: () => dispatch(downloadConstruction()),\n    handleFileOpening: inputRef => dispatch(handleFileOpening(inputRef)),\n    clearSolution: () => dispatch(clearSolution()),\n    showCanvas: () => dispatch(showCanvas())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Preprocessor);\n\nvar _c;\n\n$RefreshReg$(_c, \"Preprocessor\");","map":{"version":3,"sources":["C:/Users/glush/Desktop/react-sapr-main/src/components/Preprocessor/Preprocessor.js"],"names":["connect","addNewStern","newSternAreaChanged","newSternLengthChanged","newSternModulusChanged","newSternSigmaChanged","newSternDistLoadChanged","changeStern","changingSternAreaChanged","changingSternLengthChanged","changingSternModulusChanged","changingSternSigmaChanged","changingSternDistLoadChanged","changingSternSubmit","removeSternRow","addVortexRow","newVortexNumberChanged","newVortexForceChanged","removeVortexRow","changeVortex","changingVortexNumberChanged","changingVortexForceChanged","changingVortexSubmit","changeLeftSupport","changeRightSupport","checkForError","downloadConstruction","handleFileOpening","clearSolution","showCanvas","ConstructionCanvas","Preprocessor","props","rodsRows","map","rodRow","index","changingSternIndex","changingSternInputRow","area","e","target","value","isAreaCorrect","length","isLengthCorrect","modulus","isModulusCorrect","sigma","isSigmaCorrect","distLoad","isDistLoadCorrect","reactKey","newSternInputRow","addStern","leftSupport","isChecked","rightSupport","nodesRows","nodeRow","changingVortexIndex","changingVortexInputRow","nodeNumber","isVortexNumberCorrect","nodeForce","isVortexForceCorrect","newVortexInputRow","checked","isCanvasShown","mapStateToProps","state","rodsAndVortexs","isError","errorMessage","isReadyForSave","mapDispatchToProps","dispatch","inputRef"],"mappings":"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","sourcesContent":["import { connect } from \"react-redux\";\nimport {\n    addNewStern,\n    newSternAreaChanged,\n    newSternLengthChanged,\n    newSternModulusChanged,\n    newSternSigmaChanged,\n    newSternDistLoadChanged,\n    changeStern,\n    changingSternAreaChanged,\n    changingSternLengthChanged,\n    changingSternModulusChanged,\n    changingSternSigmaChanged,\n    changingSternDistLoadChanged,\n    changingSternSubmit,\n    removeSternRow,\n    addVortexRow,\n    newVortexNumberChanged,\n    newVortexForceChanged,\n    removeVortexRow,\n    changeVortex,\n    changingVortexNumberChanged,\n    changingVortexForceChanged,\n    changingVortexSubmit,\n    changeLeftSupport,\n    changeRightSupport,\n    checkForError,\n    downloadConstruction,\n    handleFileOpening,\n    clearSolution,\n    showCanvas,\n} from \"../../reducers/reducer\";\nimport ConstructionCanvas from \"./ConstructionCanvas\";\nimport \"./Preprocessor.scss\";\n\nfunction Preprocessor(props) {\n    return (\n        <div className=\"preprocessor__body\">\n            <div className=\"preprocessor__STERNs\">\n\n                <table class=\"preprocessor__STERNs-table\">\n                    <thead>\n                        <tr>\n                            <th>Стержень</th>\n                            <th>A</th>\n                            <th>L</th>\n                            <th>E</th>\n                            <th>σ</th>\n                            <th>q</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {props.rodsRows.map((rodRow) => {\n                            if (rodRow.index === props.changingSternIndex) {\n                                return (\n                                    <tr>\n                                        <td>{props.changingSternIndex}</td>\n                                        <td>\n                                            <input\n                                                type=\"text\"\n                                                value={\n                                                    props.changingSternInputRow\n                                                        .area\n                                                }\n                                                onChange={(e) =>\n                                                    props.changingSternAreaChanged(\n                                                        e.target.value\n                                                    )\n                                                }\n                                                className={`table-input ${\n                                                    props.changingSternInputRow\n                                                        .isAreaCorrect\n                                                        ? \"\"\n                                                        : \"input-error\"\n                                                }`}\n                                            />\n                                        </td>\n                                        <td>\n                                            <input\n                                                type=\"text\"\n                                                value={\n                                                    props.changingSternInputRow\n                                                        .length\n                                                }\n                                                onChange={(e) =>\n                                                    props.changingSternLengthChanged(\n                                                        e.target.value\n                                                    )\n                                                }\n                                                className={`table-input ${\n                                                    props.changingSternInputRow\n                                                        .isLengthCorrect\n                                                        ? \"\"\n                                                        : \"input-error\"\n                                                }`}\n                                            />\n                                        </td>\n                                        <td>\n                                            <input\n                                                type=\"text\"\n                                                value={\n                                                    props.changingSternInputRow\n                                                        .modulus\n                                                }\n                                                onChange={(e) =>\n                                                    props.changingSternModulusChanged(\n                                                        e.target.value\n                                                    )\n                                                }\n                                                className={`table-input ${\n                                                    props.changingSternInputRow\n                                                        .isModulusCorrect\n                                                        ? \"\"\n                                                        : \"input-error\"\n                                                }`}\n                                            />\n                                        </td>\n                                        <td>\n                                            <input\n                                                type=\"text\"\n                                                value={\n                                                    props.changingSternInputRow\n                                                        .sigma\n                                                }\n                                                onChange={(e) =>\n                                                    props.changingSternSigmaChanged(\n                                                        e.target.value\n                                                    )\n                                                }\n                                                className={`table-input ${\n                                                    props.changingSternInputRow\n                                                        .isSigmaCorrect\n                                                        ? \"\"\n                                                        : \"input-error\"\n                                                }`}\n                                            />\n                                        </td>\n                                        <td>\n                                            <input\n                                                type=\"text\"\n                                                value={\n                                                    props.changingSternInputRow\n                                                        .distLoad\n                                                }\n                                                onChange={(e) =>\n                                                    props.changingSternDistLoadChanged(\n                                                        e.target.value\n                                                    )\n                                                }\n                                                className={`table-input ${\n                                                    props.changingSternInputRow\n                                                        .isDistLoadCorrect\n                                                        ? \"\"\n                                                        : \"input-error\"\n                                                }`}\n                                            />\n                                        </td>\n                                        <td\n                                        // className={styles.rodRowButtons}\n                                        >\n                                            <button\n                                                onClick={() => {\n                                                    props.changingSternSubmit();\n                                                    props.clearSolution();\n                                                }}>\n                                                ✓\n                                            </button>\n                                        </td>\n                                    </tr>\n                                );\n                            }\n                            return (\n                                <tr key={rodRow.reactKey}>\n                                    <td>{rodRow.index}</td>\n                                    <td>{rodRow.area}</td>\n                                    <td>{rodRow.length}</td>\n                                    <td>{rodRow.modulus}</td>\n                                    <td>{rodRow.sigma}</td>\n                                    <td>{rodRow.distLoad}</td>\n                                    <td className=\"preprocessor__STERNs-row-buttons\">\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                        <tr>\n                            <td>{props.rodsRows.length + 1}</td>\n                            <td>\n                                <input\n                                    className={`table-input ${\n                                        props.newSternInputRow.isAreaCorrect\n                                            ? \"\"\n                                            : \"input-error\"\n                                    }`}\n                                    type=\"text\"\n                                    value={props.newSternInputRow.area}\n                                    onChange={(e) => {\n                                        props.newSternAreaChanged(e.target.value);\n                                    }}\n                                />\n                            </td>\n                            <td>\n                                <input\n                                    className={`table-input ${\n                                        props.newSternInputRow.isLengthCorrect\n                                            ? \"\"\n                                            : \"input-error\"\n                                    }`}\n                                    type=\"text\"\n                                    value={props.newSternInputRow.length}\n                                    onChange={(e) => {\n                                        props.newSternLengthChanged(\n                                            e.target.value\n                                        );\n                                    }}\n                                />\n                            </td>\n                            <td>\n                                <input\n                                    className={`table-input ${\n                                        props.newSternInputRow.isModulusCorrect\n                                            ? \"\"\n                                            : \"input-error\"\n                                    }`}\n                                    type=\"text\"\n                                    value={props.newSternInputRow.modulus}\n                                    onChange={(e) => {\n                                        props.newSternModulusChanged(\n                                            e.target.value\n                                        );\n                                    }}\n                                />\n                            </td>\n                            <td>\n                                <input\n                                    className={`table-input ${\n                                        props.newSternInputRow.isSigmaCorrect\n                                            ? \"\"\n                                            : \"input-error\"\n                                    }`}\n                                    type=\"text\"\n                                    value={props.newSternInputRow.sigma}\n                                    onChange={(e) => {\n                                        props.newSternSigmaChanged(\n                                            e.target.value\n                                        );\n                                    }}\n                                />\n                            </td>\n                            <td>\n                                <input\n                                    className={`table-input ${\n                                        props.newSternInputRow.isDistLoadCorrect\n                                            ? \"\"\n                                            : \"input-error\"\n                                    }`}\n                                    type=\"text\"\n                                    value={props.newSternInputRow.distLoad}\n                                    onChange={(e) => {\n                                        props.newSternDistLoadChanged(\n                                            e.target.value\n                                        );\n                                    }}\n                                />\n                            </td>\n                            <td className=\"preprocessor__STERNs-add-stem-button-td\">\n                                <button\n                                    className=\"preprocessor__STERNs-add-stem-button\"\n                                    onClick={() => {\n                                        props.addStern();\n                                        props.changeLeftSupport(\n                                            props.leftSupport.isChecked\n                                        );\n                                        props.changeRightSupport(\n                                            props.rightSupport.isChecked\n                                        );\n                                        props.checkForError();\n                                        props.clearSolution();\n                                    }}>\n                                    Добавить\n                                </button>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div className=\"preprocessor__nodes\">\n                <table className=\"preprocessor__nodes-table\">\n                    <thead>\n                        <tr>\n                            <th>Номер узла</th>\n                            <th>H</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {props.nodesRows.map((nodeRow, index) => {\n                            if (index === props.changingVortexIndex) {\n                                return (\n                                    <tr>\n                                        <td>\n                                            <input\n                                                type=\"text\"\n                                                value={\n                                                    props.changingVortexInputRow\n                                                        .nodeNumber\n                                                }\n                                                onChange={(e) =>\n                                                    props.changingVortexNumberChanged(\n                                                        e.target.value\n                                                    )\n                                                }\n                                                className={`table-input ${\n                                                    props.changingVortexInputRow\n                                                        .isVortexNumberCorrect\n                                                        ? \"\"\n                                                        : \"input-error\"\n                                                }`}\n                                            />\n                                        </td>\n                                        <td>\n                                            <input\n                                                type=\"text\"\n                                                value={\n                                                    props.changingVortexInputRow\n                                                        .nodeForce\n                                                }\n                                                onChange={(e) =>\n                                                    props.changingVortexForceChanged(\n                                                        e.target.value\n                                                    )\n                                                }\n                                                className={`table-input ${\n                                                    props.changingVortexInputRow\n                                                        .isVortexForceCorrect\n                                                        ? \"\"\n                                                        : \"input-error\"\n                                                }`}\n                                            />\n                                        </td>\n                                        <td\n                                        // className={styles.rodRowButtons}\n                                        >\n                                            <button\n                                                onClick={() => {\n                                                    props.changingVortexSubmit();\n                                                    props.checkForError();\n                                                    props.clearSolution();\n                                                }}>\n                                                ✓\n                                            </button>\n                                        </td>\n                                    </tr>\n                                );\n                            }\n                            return (\n                                <tr>\n                                    <td>{nodeRow.nodeNumber}</td>\n                                    <td>{nodeRow.nodeForce}</td>\n                                    <td className=\"preprocessor__nodes-button-td\">\n\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                        <tr>\n                            <td>\n                                <input\n                                    type=\"text\"\n                                    value={props.newVortexInputRow.nodeNumber}\n                                    onChange={(e) =>\n                                        props.newVortexNumberChanged(\n                                            e.target.value\n                                        )\n                                    }\n                                    className={`table-input ${\n                                        props.newVortexInputRow\n                                            .isVortexNumberCorrect\n                                            ? \"\"\n                                            : \"input-error\"\n                                    }`}\n                                />\n                            </td>\n                            <td>\n                                <input\n                                    type=\"text\"\n                                    value={props.newVortexInputRow.nodeForce}\n                                    onChange={(e) =>\n                                        props.newVortexForceChanged(\n                                            e.target.value\n                                        )\n                                    }\n                                    className={`table-input ${\n                                        props.newVortexInputRow.isVortexForceCorrect\n                                            ? \"\"\n                                            : \"input-error\"\n                                    }`}\n                                />\n                            </td>\n                            <td className=\"preprocessor__nodes-button-td\">\n                                <button\n                                    onClick={() => {\n                                        props.addVortexRow();\n                                        props.checkForError();\n                                    }}>\n                                    Добавить нагрузку\n                                </button>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div className=\"preprocessor__STERNs-interface\">\n                <div className=\"preprocessor__STERNs-supports\">\n                    <div>\n                        Левая заделка\n                        <input\n                            type=\"checkbox\"\n                            // className={styles.scale}\n                            checked={props.leftSupport.isChecked}\n                            onChange={(e) => {\n                                props.changeLeftSupport(e.target.checked);\n                                props.clearSolution();\n                                props.checkForError();\n                            }}\n                        />\n                    </div>\n                    <div>\n                        Правая заделка\n                        <input\n                            type=\"checkbox\"\n                            checked={props.rightSupport.isChecked}\n                            onChange={(e) => {\n                                props.changeRightSupport(e.target.checked);\n                                props.clearSolution();\n                                props.checkForError();\n                            }}\n                        />\n                    </div>\n                </div>\n                {/*<div className=\"preprocessor__STERNs-buttons\">*/}\n                {/*    <div>*/}\n                {/*        <button*/}\n                {/*            // disabled={!props.isReadyForSave}*/}\n                {/*            onClick={() => {*/}\n                {/*                if (*/}\n                {/*                    props.errorMessage.length > 0 ||*/}\n                {/*                    !props.isReadyForSave*/}\n                {/*                ) {*/}\n                {/*                    alert(props.errorMessage);*/}\n                {/*                } else {*/}\n                {/*                    props.showCanvas();*/}\n                {/*                }*/}\n                {/*            }}>*/}\n                {/*            Построить конструкцию*/}\n                {/*        </button>*/}\n                {/*    </div>*/}\n                {/*</div>*/}\n            </div>\n            {props.isCanvasShown ? <ConstructionCanvas data={props} /> : null}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        rodsRows: state.rodsAndVortexs.rodsRows,\n        newSternInputRow: state.rodsAndVortexs.newSternInputRow,\n        changingSternIndex: state.rodsAndVortexs.changingSternIndex,\n        changingSternInputRow: state.rodsAndVortexs.changingSternInputRow,\n\n        nodesRows: state.rodsAndVortexs.nodesRows,\n        newVortexInputRow: state.rodsAndVortexs.newVortexInputRow,\n        changingVortexIndex: state.rodsAndVortexs.changingVortexIndex,\n        changingVortexInputRow: state.rodsAndVortexs.changingVortexInputRow,\n\n        leftSupport: state.rodsAndVortexs.leftSupport,\n        rightSupport: state.rodsAndVortexs.rightSupport,\n\n        isError: state.rodsAndVortexs.isError,\n        errorMessage: state.rodsAndVortexs.errorMessage,\n        isReadyForSave: state.rodsAndVortexs.isReadyForSave,\n        isCanvasShown: state.rodsAndVortexs.isCanvasShown,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addStern: () => dispatch(addNewStern()),\n        newSternAreaChanged: (value) => {\n            dispatch(newSternAreaChanged(value));\n        },\n        newSternLengthChanged: (value) => dispatch(newSternLengthChanged(value)),\n        newSternModulusChanged: (value) => dispatch(newSternModulusChanged(value)),\n        newSternSigmaChanged: (value) => dispatch(newSternSigmaChanged(value)),\n        newSternDistLoadChanged: (value) =>\n            dispatch(newSternDistLoadChanged(value)),\n        changeStern: (index) => dispatch(changeStern(index)),\n        changingSternAreaChanged: (value) =>\n            dispatch(changingSternAreaChanged(value)),\n        changingSternLengthChanged: (value) =>\n            dispatch(changingSternLengthChanged(value)),\n        changingSternModulusChanged: (value) =>\n            dispatch(changingSternModulusChanged(value)),\n        changingSternSigmaChanged: (value) =>\n            dispatch(changingSternSigmaChanged(value)),\n        changingSternDistLoadChanged: (value) =>\n            dispatch(changingSternDistLoadChanged(value)),\n        changingSternSubmit: () => dispatch(changingSternSubmit()),\n        removeSternRow: (index) => dispatch(removeSternRow(index)),\n\n        addVortexRow: () => dispatch(addVortexRow()),\n        removeVortexRow: (index) => dispatch(removeVortexRow(index)),\n        changeVortex: (index) => dispatch(changeVortex(index)),\n        newVortexNumberChanged: (value) => dispatch(newVortexNumberChanged(value)),\n        newVortexForceChanged: (value) => dispatch(newVortexForceChanged(value)),\n        changingVortexNumberChanged: (value) =>\n            dispatch(changingVortexNumberChanged(value)),\n        changingVortexForceChanged: (value) =>\n            dispatch(changingVortexForceChanged(value)),\n        changingVortexSubmit: () => dispatch(changingVortexSubmit()),\n        changeLeftSupport: (isChecked) =>\n            dispatch(changeLeftSupport(isChecked)),\n        changeRightSupport: (isChecked) =>\n            dispatch(changeRightSupport(isChecked)),\n        checkForError: () => dispatch(checkForError()),\n        downloadConstruction: () => dispatch(downloadConstruction()),\n        handleFileOpening: (inputRef) => dispatch(handleFileOpening(inputRef)),\n        clearSolution: () => dispatch(clearSolution()),\n        showCanvas: () => dispatch(showCanvas()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Preprocessor);\n"]},"metadata":{},"sourceType":"module"}